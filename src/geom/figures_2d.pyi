import numpy as np
import numpy.typing as npt

from abc import ABC
from geom.abc import BaseFigure2D
from typing import List, Sequence, Union

__all__: List[str]

class Figure2D(BaseFigure2D, ABC):
    _verts: npt.NDArray[np.float64]
    def __init__(self, verts: Union[Sequence, npt.NDArray], *args, **kwargs) -> None: ...
    def __str__(self) -> str: ...
    def area(self) -> np.float64: ...
    @property
    def verts(self) -> npt.NDArray[np.float64]: ...


class Triangle(Figure2D, ABC):
    def __init__(self, verts: Union[Sequence, npt.NDArray], *args, **kwargs) -> None: ...
    def area(self) -> np.float64: ...
    def is_right_angled(self) -> bool: ...
