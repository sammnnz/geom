name: Tests implementation

on:
   workflow_call:
     inputs:
       ref:
         required: false
         type: string
         default: ${{github.ref_name}}
       os:
         required: true
         type: string
       py:
         required: true
         type: string
       cov:
         required: false
         type: string
         default: 'false'
       lint:
         required: false
         type: string
         default: 'false'
       typecheck:
         required: false
         type: string
         default: 'false'
     secrets:
       token:
         required: true
       # https://giters.com/codecov/codecov-action/issues/1738
       codecov_token:
         required: false

jobs:
  pre:
    runs-on: ubuntu-latest
    steps:
      - name: Parse ref
        run: |
          if [ ${{github.event_name}} == 'pull_request' ]; then
            echo "CURRENTREF=${{github.event.pull_request.head.ref}}" >> $GITHUB_ENV
          else
            echo "CURRENTREF=${{inputs.ref}}" >> $GITHUB_ENV
          fi
  tests:
    runs-on: ${{inputs.os}}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3
        with:
          repository: sammnnz/geom
          ref: ${{env.CURRENTREF}}
      - name: Setup Python ${{inputs.py}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{inputs.py}}
      - name: Install dependencies
        run: |
          python -m pip install poetry
          poetry config virtualenvs.create false
          poetry lock
          poetry install --no-interaction
      - name: Test with pytest
        run: |
          poetry run pytest --assert=plain --color=yes --cov=geompy --cov-config=.coveragerc --verbose
      - name: Pytest-cov coverage report in xml
        if: ${{inputs.cov == 'true'}}
        run: |
          poetry run coverage xml -o coverage.xml
      - name: Upload coverage to Codecov
        if: ${{inputs.cov == 'true'}}
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          flags: py-${{inputs.py}}
          file: ./coverage.xml
          name: unittests
          slug: sammnnz/geom
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
      - name: Linter
        if: ${{inputs.lint == 'true'}}
        run: |
          poetry run flake8 src tests
      - name: Type-checker
        if: ${{inputs.typecheck == 'true'}}
        run: |
          poetry run mypy src
